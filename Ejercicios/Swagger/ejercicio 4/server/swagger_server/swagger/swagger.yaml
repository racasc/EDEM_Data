openapi: 3.0.1
info:
  title: EDEM BlackJack
  description: EDEM BlackJack
  termsOfService: http://swagger.io/terms/
  contact:
    email: pono@gft.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://localhost/swagger-ui
- url: http://localhost/swagger-ui
tags:
- name: BlackJack
  description: All actions related to The server
paths:
  /onboarding:
    post:
      tags:
      - BlackJack
      summary: Onboard a new player
      description: This is the first point of your interaction, please introduce yourselves
      operationId: onboarding
      requestBody:
        description: User to add to the game
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.server_controller  
  /nextcard:
    post:
      tags:
      - BlackJack
      summary: Execute next card
      description: Next Card
      operationId: nextcard
      responses:
        '200':
          description: User added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.server_controller
  /newgame:
    get:
      tags:
      - BlackJack
      summary: Start new game
      description: Reset game
      operationId: newgame
      responses:
        '200':
          description: User added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserExtended'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.server_controller
  /getallplayers:
    get:
      tags:
      - BlackJack
      summary: Get Players Status
      description: Players Status
      operationId: getallplayers
      responses:
        '200':
          description: User added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserExtended'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.server_controller
  /getstatus/{id}:
    get:
      tags:
      - BlackJack
      summary: Get Players Status
      description: Players Status
      operationId: getstatus
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the user to retrieve"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserExtended'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.server_controller
components:
  schemas:
    User:
      type: object
      required:
      - "name"
      - "image"
      - "ip"
      properties:
        name:
          type: "string"
        image:
          type: "string"
        ip:
          type: "string"
    UserExtended:
      type: object
      required:
      - "name"
      - "cards"
      - "money"
      properties:
        name:
          type: "string"
        cards:
          type: "string"
        money:
          type: "string"
    Message:
      type: object
      required:
      - "code"
      - "message"
      properties:
        code:
          type: "string"
        message:
          type: "string"
